// Mocks generated by Mockito 5.4.4 from annotations
// in payments_management/test/mockito.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:payments_management/features/home/services/home_services.dart'
    as _i2;
import 'package:payments_management/models/payment/payment.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [HomeServices].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeServices extends _i1.Mock implements _i2.HomeServices {
  MockHomeServices() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Payment>> fetchUndonePayments() => (super.noSuchMethod(
        Invocation.method(
          #fetchUndonePayments,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Payment>>.value(<_i4.Payment>[]),
      ) as _i3.Future<List<_i4.Payment>>);

  @override
  _i3.Future<void> completeTask({
    required dynamic context,
    required String? paymentId,
    required String? taskId,
    required String? dateCompleted,
    required String? amount,
    String? place,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #completeTask,
          [],
          {
            #context: context,
            #paymentId: paymentId,
            #taskId: taskId,
            #dateCompleted: dateCompleted,
            #amount: amount,
            #place: place,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
